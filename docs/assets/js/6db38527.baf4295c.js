"use strict";(self.webpackChunkinvesting_algorithm_framework_docs=self.webpackChunkinvesting_algorithm_framework_docs||[]).push([[6262],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>d});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var p=n.createContext({}),f=function(e){var t=n.useContext(p),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},c=function(e){var t=f(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=f(o),m=r,d=u["".concat(p,".").concat(m)]||u[m]||s[m]||a;return o?n.createElement(d,i(i({ref:t},c),{},{components:o})):n.createElement(d,i({ref:t},c))}));function d(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,i=new Array(a);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var f=2;f<a;f++)i[f]=o[f];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}m.displayName="MDXCreateElement"},4739:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>s,frontMatter:()=>a,metadata:()=>l,toc:()=>f});var n=o(7462),r=(o(7294),o(3905));const a={},i="Portfolio configuration",l={unversionedId:"Getting Started/portfolio-configuration",id:"Getting Started/portfolio-configuration",title:"Portfolio configuration",description:"In this section we will explain how to configure your portfolio from your broker or exchange.",source:"@site/docs/Getting Started/portfolio-configuration.md",sourceDirName:"Getting Started",slug:"/Getting Started/portfolio-configuration",permalink:"/investing-algorithm-framework/docs/Getting Started/portfolio-configuration",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSideBar",previous:{title:"Application Setup",permalink:"/investing-algorithm-framework/docs/Getting Started/application-setup"},next:{title:"Strategies",permalink:"/investing-algorithm-framework/docs/Getting Started/strategies"}},p={},f=[{value:"Configuration of a portfolio",id:"configuration-of-a-portfolio",level:2},{value:"Market credentials",id:"market-credentials",level:3},{value:"Simplified portfolio configuration registration",id:"simplified-portfolio-configuration-registration",level:3},{value:"Specify the maximum size of the portfolio (Initial balance)",id:"specify-the-maximum-size-of-the-portfolio-initial-balance",level:3}],c={toc:f},u="wrapper";function s(e){let{components:t,...o}=e;return(0,r.kt)(u,(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"portfolio-configuration"},"Portfolio configuration"),(0,r.kt)("p",null,"In this section we will explain how to configure your portfolio from your broker or exchange.\nThe framework has by default support for ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ccxt/ccxt"},"CCXT"),".\nCCXT is a library that provides a unified API to interact with multiple brokers and exchanges."),(0,r.kt)("p",null,"Please have a look at the ccxt documentation to see which brokers and exchanges are supported."),(0,r.kt)("h2",{id:"configuration-of-a-portfolio"},"Configuration of a portfolio"),(0,r.kt)("p",null,"To configure a portfolio you need to create a ",(0,r.kt)("inlineCode",{parentName:"p"},"PortfolioConfiguration")," object.\nThe ",(0,r.kt)("inlineCode",{parentName:"p"},"PortfolioConfiguration")," object is used to connect your trading bot to your broker or exchange."),(0,r.kt)("p",null,"The following code snippet shows how to create a ",(0,r.kt)("inlineCode",{parentName:"p"},"PortfolioConfiguration")," object. You must register\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"PortfolioConfiguration")," object with the app in the ",(0,r.kt)("inlineCode",{parentName:"p"},"app.py")," file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from investing_algorithm_framework import PortfolioConfiguration, create_app\n\napp = create_app()\napp.add_portfolio_configuration(\n     PortfolioConfiguration(market="BITVAVO", trading_symbol="EUR")\n)\n')),(0,r.kt)("h3",{id:"market-credentials"},"Market credentials"),(0,r.kt)("p",null,"To let your portfolio configuration connect the portfolio to the market, you need to specify a market credential of your broker or exchange.\nThe market credentials holds the API key and secret of your broker or exchange."),(0,r.kt)("p",null,"The following code snippet shows how to specify the market credentials:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from investing_algorithm_framework import PortfolioConfiguration, create_app, MarketCredentials\n\napp = create_app()\napp.add_portfolio_configuration(\n     PortfolioConfiguration(\n         market="BITVAVO",\n         trading_symbol="EUR",\n     )\n)\napp.add_market_credentials(\n    MarketCredentials(\n        market="BITVAVO",\n        api_key=<api_key>,\n        api_secret=<api_secret>\n    )\n)\n')),(0,r.kt)("p",null,"You can also specify the api key and secret in a .env file. The framework will automatically load the credentials from the .env file.\nThe following code snippet shows how to specify the market credentials in a .env file for the BITVAVO exchange:"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Make sure to specify the API_KEY and SECRET_KEY with the market indentifier prefix. So for example for the BITVAVO exchange\nthe API key and secret key should be specified as <MARKET_IDENTIFIER>_API_KEY and <MARKET_IDENTIFIER>_SECRET_KEY which\nresults in the following environment variables: BITVAVO_API_KEY and BITVAVO_SECRET_KEY.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"BITVAVO_API_KEY=<api_key>\nBITVAVO_SECRET_KEY=<api_secret>\n")),(0,r.kt)("p",null,"You can then use the following code snippet to load the credentials from the .env file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from investing_algorithm_framework import PortfolioConfiguration, create_app, MarketCredentials\n\napp = create_app()\napp.add_portfolio_configuration(PortfolioConfiguration(market="BITVAVO", trading_symbol="EUR"))\napp.add_market_credentials(MarketCredentials(market="BITVAVO"))\n')),(0,r.kt)("h3",{id:"simplified-portfolio-configuration-registration"},"Simplified portfolio configuration registration"),(0,r.kt)("p",null,"If you want to register your portfolio configuration and market credentials in a single step, you can use the following\nnotation for creating a ",(0,r.kt)("inlineCode",{parentName:"p"},"PortfolioConfiguration")," object."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from dotenv import load_dotenv\nimport os\n\nfrom investing_algorithm_framework import PortfolioConfiguration, create_app\n\nload_dotenv()\n\napp = create_app()\napp.add_portfolio_configuration(\n     PortfolioConfiguration(\n         market="BITVAVO",\n         trading_symbol="EUR",\n         api_key=os.getenv("BITVAVO_API_KEY"),\n         api_secret=os.getenv("BITVAVO_SECRET_KEY")\n     )\n)\n')),(0,r.kt)("p",null,"Or if you want to use environment variables, you can use the following code snippet:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from dotenv import load_dotenv\nfrom investing_algorithm_framework import PortfolioConfiguration, create_app\n\nload_dotenv()\napp = create_app()\napp.add_portfolio_configuration(\n     PortfolioConfiguration(\n         market="BITVAVO", trading_symbol="EUR",\n     )\n)\n')),(0,r.kt)("p",null,"In both cases, the framework will automatically create the ",(0,r.kt)("inlineCode",{parentName:"p"},"MarketCredentials")," object for you."),(0,r.kt)("h3",{id:"specify-the-maximum-size-of-the-portfolio-initial-balance"},"Specify the maximum size of the portfolio (Initial balance)"),(0,r.kt)("p",null,"If you want to specify the maximum size of your portfolio, you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"initial_balance")," parameter of your portfolio configuration.\nThe following code snippet shows how to use the ",(0,r.kt)("inlineCode",{parentName:"p"},"initial_balance")," parameter:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from datetime import datetime\nfrom investing_algorithm_framework import PortfolioConfiguration, create_app\n\napp = create_app()\napp.add_portfolio_configuration(\n     PortfolioConfiguration(\n         market="BITVAVO",\n         trading_symbol="EUR",\n         initial_balance=1000 # Max unallocated amount of EUR, the rest of your balance of eur at the exchange will be untouched \n     )\n)\n')))}s.isMDXComponent=!0}}]);
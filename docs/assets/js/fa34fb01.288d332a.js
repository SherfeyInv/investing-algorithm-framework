"use strict";(self.webpackChunkinvesting_algorithm_framework_docs=self.webpackChunkinvesting_algorithm_framework_docs||[]).push([[2924],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=d(n),m=r,g=c["".concat(p,".").concat(m)]||c[m]||s[m]||i;return n?a.createElement(g,l(l({ref:t},u),{},{components:n})):a.createElement(g,l({ref:t},u))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[c]="string"==typeof e?e:r,l[1]=o;for(var d=2;d<i;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2013:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>s,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const i={id:"application-setup",title:"Create an app instance",sidebar_label:"application setup"},l=void 0,o={unversionedId:"Getting Started/application-setup",id:"Getting Started/application-setup",title:"Create an app instance",description:"\ud83d\udd27 Application Setup through CLI: Command Line Interface",source:"@site/docs/Getting Started/application-setup.md",sourceDirName:"Getting Started",slug:"/Getting Started/application-setup",permalink:"/investing-algorithm-framework/Getting Started/application-setup",draft:!1,tags:[],version:"current",frontMatter:{id:"application-setup",title:"Create an app instance",sidebar_label:"application setup"},sidebar:"defaultSideBar",previous:{title:"Installation",permalink:"/investing-algorithm-framework/Getting Started/installation"},next:{title:"Portfolio configuration",permalink:"/investing-algorithm-framework/Getting Started/portfolio-configuration"}},p={},d=[{value:"\ud83d\udd27 Application Setup through CLI: Command Line Interface",id:"-application-setup-through-cli-command-line-interface",level:2},{value:"\u2699\ufe0f init Command",id:"\ufe0f-init-command",level:3},{value:"\ud83c\udfd7\ufe0f Using the <code>create_app</code> Function",id:"\ufe0f-using-the-create_app-function",level:2},{value:"Description",id:"description",level:3},{value:"Function Signature",id:"function-signature",level:3},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:3}],u={toc:d},c="wrapper";function s(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"-application-setup-through-cli-command-line-interface"},"\ud83d\udd27 Application Setup through CLI: Command Line Interface"),(0,r.kt)("p",null,"The CLI tool included with the framework allows you to initialize new apps with different presets"),(0,r.kt)("p",null,"The best way to get started with the framework is to create an application through the init cli command.\nYou can do this by running the following command in your terminal:"),(0,r.kt)("h3",{id:"\ufe0f-init-command"},"\u2699\ufe0f init Command"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"investing-algorithm-framework init --type default --path ./my-app --replace\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--type")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"str")),(0,r.kt)("td",{parentName:"tr",align:null},"Type of app to initialize (",(0,r.kt)("inlineCode",{parentName:"td"},"default"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"default_web"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"azure_function"),").")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--path")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"str")),(0,r.kt)("td",{parentName:"tr",align:null},"Directory path to create the app in.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--replace")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bool")),(0,r.kt)("td",{parentName:"tr",align:null},"If ",(0,r.kt)("inlineCode",{parentName:"td"},"True"),", existing files will be overwritten.")))),(0,r.kt)("p",null,"This will create the following directory structure:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 app.py\n\u251c\u2500\u2500 strategies\n\u2502   \u2514\u2500\u2500 my_trading_strategy.py\n\u2514\u2500\u2500 gitignore\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"app.py")," file is the main entry point for your application. Ideally, you should only use this file to register your\nstrategies, portfolio configurations and market data sources. Its also\nnot recommended to add any logic to this file because the framework will use this file to run your application."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"strategies")," directory is where you can add your trading strategies. You can create multiple files in this directory\nand add your trading strategies to them. The framework will use this directory to save and link your\ntrading strategies to your backtest runs. This allows you to easily run multiple backtests with different trading strategies\nand bundle them with your backtest results. "),(0,r.kt)("p",null,"By default the REST API and UI are disabled. You can enable them by running the init command with the ",(0,r.kt)("inlineCode",{parentName:"p"},"--web")," flag:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"investing-algorithm-framework init --web\n")),(0,r.kt)("p",null,"or you can enable them later by adding the following lines to your ",(0,r.kt)("inlineCode",{parentName:"p"},"app.py")," file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import logging.config\nfrom dotenv import load_dotenv\n\nfrom investing_algorithm_framework import create_app, DEFAULT_LOGGING_CONFIG\n\nload_dotenv()\nlogging.config.dictConfig(DEFAULT_LOGGING_CONFIG)\n\napp = create_app(\n    web=True,  # Enable the REST API and UI\n)\n\n# Register your trading strategies here\n...\n\n# Register your market data sources here\n...\n\n# Register your portfolio configurations here\n...\n\n# Run the app\nif __name__ == "__main__":\n    app.run()\n')),(0,r.kt)("h2",{id:"\ufe0f-using-the-create_app-function"},"\ud83c\udfd7\ufe0f Using the ",(0,r.kt)("inlineCode",{parentName:"h2"},"create_app")," Function"),(0,r.kt)("h3",{id:"description"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"create_app")," function is a factory method for creating and configuring an ",(0,r.kt)("inlineCode",{parentName:"p"},"App")," instance. It loads environment variables, sets up the dependency container, and optionally initializes a web-based configuration.\nThis function is usefull if you want to create an app programmatically or if you want to extend the app with custom configurations."),(0,r.kt)("h3",{id:"function-signature"},"Function Signature"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def create_app(\n    config: dict = None,\n    state_handler=None,\n    web: bool = False,\n    name=None\n) -> App:\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"config")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"dict")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional dictionary containing app configuration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"state_handler")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"object")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional custom state handler for managing internal state.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"web")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bool")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to configure the app for web use (",(0,r.kt)("inlineCode",{parentName:"td"},"AppMode.WEB"),").")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"str")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional name to assign to the application instance.")))),(0,r.kt)("h3",{id:"returns"},"Returns"),(0,r.kt)("p",null,"Returns an instance of the App class, fully initialized and ready to run or extend."),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from investing_algorithm_framework import create_app\n\napp = create_app(\n    config={"MY_CONFIG": "value"},\n    web=True,\n    name="my_trading_bot"\n)\n')))}s.isMDXComponent=!0}}]);
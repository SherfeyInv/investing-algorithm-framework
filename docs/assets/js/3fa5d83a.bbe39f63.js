"use strict";(self.webpackChunkinvesting_algorithm_framework_docs=self.webpackChunkinvesting_algorithm_framework_docs||[]).push([[6270],{3905:(e,t,r)=>{r.d(t,{Zo:()=>g,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},g=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,g=s(e,["components","mdxType","originalType","parentName"]),p=c(r),u=a,d=p["".concat(l,".").concat(u)]||p[u]||m[u]||o;return r?n.createElement(d,i(i({ref:t},g),{},{components:r})):n.createElement(d,i({ref:t},g))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},4618:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:4},i="Strategies",s={unversionedId:"Getting Started/strategies",id:"Getting Started/strategies",title:"Strategies",description:"Strategies are the core of the framework. They are the main entry point for the framework.",source:"@site/docs/Getting Started/strategies.md",sourceDirName:"Getting Started",slug:"/Getting Started/strategies",permalink:"/investing-algorithm-framework/docs/Getting Started/strategies",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"defaultSideBar",previous:{title:"Portfolio configuration",permalink:"/investing-algorithm-framework/docs/Getting Started/portfolio-configuration"},next:{title:"Orders",permalink:"/investing-algorithm-framework/docs/Getting Started/orders"}},l={},c=[{value:"Class based strategy",id:"class-based-strategy",level:2},{value:"Decorator based strategy",id:"decorator-based-strategy",level:2}],g={toc:c},p="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},g,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"strategies"},"Strategies"),(0,a.kt)("p",null,"Strategies are the core of the framework. They are the main entry point for the framework.\nStrategies are used to define the trading logic of your algorithm. In your strategy you can use the algorithm object to\nplace orders, get orders, get the current balance and more."),(0,a.kt)("p",null,"When defining a strategy you need to define the following things:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The time unit of the strategy (second, minute, hour, day, week, month)"),(0,a.kt)("li",{parentName:"ul"},"The interval of the strategy (how often the strategy should run within the time unit)")),(0,a.kt)("p",null,"The framework comes with two ways to define a strategy."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Class based strategies"),(0,a.kt)("li",{parentName:"ul"},"Decorator strategies")),(0,a.kt)("h2",{id:"class-based-strategy"},"Class based strategy"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from investing_algorithm_framework import TimeUnit, TradingStrategy, Algorithm\n\napp = create_app()\n\nclass MyTradingStrategy(TradingStrategy):\n    time_unit = TimeUnit.SECOND # The time unit of the strategy\n    interval = 5 # The interval of the strategy, runs every 5 seconds\n\n    def apply_strategy(self, algorithm: Algorithm, market_data: Dict[str, Any]):\n        pass\n        \napp.register_strategy(MyTradingStrategy)\n")),(0,a.kt)("h2",{id:"decorator-based-strategy"},"Decorator based strategy"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from investing_algorithm_framework import create_app, TimeUnit, Algorithm\n\n# Runs every 5 seconds\n@app.strategy(time_unit=TimeUnit.SECOND, interval=5)\ndef perform_strategy(algorithm: Algorithm, market_data: Dict[str, Any]):\n    pass\n")))}m.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkinvesting_algorithm_framework_docs=self.webpackChunkinvesting_algorithm_framework_docs||[]).push([[2924],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(n),g=a,m=u["".concat(p,".").concat(g)]||u[g]||d[g]||i;return n?r.createElement(m,o(o({ref:t},c),{},{components:n})):r.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=g;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},2013:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:2},o="Application Setup",l={unversionedId:"Getting Started/application-setup",id:"Getting Started/application-setup",title:"Application Setup",description:"The best way to get started with the framework is to create an application through the init cli command.",source:"@site/docs/Getting Started/application-setup.md",sourceDirName:"Getting Started",slug:"/Getting Started/application-setup",permalink:"/investing-algorithm-framework/docs/Getting Started/application-setup",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSideBar",previous:{title:"Installation",permalink:"/investing-algorithm-framework/docs/Getting Started/installation"},next:{title:"Portfolio configuration",permalink:"/investing-algorithm-framework/docs/Getting Started/portfolio-configuration"}},p={},s=[],c={toc:s},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"application-setup"},"Application Setup"),(0,a.kt)("p",null,"The best way to get started with the framework is to create an application through the init cli command.\nYou can do this by running the following command in your terminal:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"investing-algorithm-framework init\n")),(0,a.kt)("p",null,"This will create the following directory structure:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 app.py\n\u251c\u2500\u2500 strategies\n\u2502   \u2514\u2500\u2500 my_trading_strategy.py\n\u2514\u2500\u2500 gitignore\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"app.py")," file is the main entry point for your application. Ideally, you should only use this file to register your\nstrategies, portfolio configurations and market data sources. Its also\nnot recommended to add any logic to this file because the framework will use this file to run your application."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"strategies")," directory is where you can add your trading strategies. You can create multiple files in this directory\nand add your trading strategies to them. The framework will use this directory to save and link your\ntrading strategies to your backtest runs. This allows you to easily run multiple backtests with different trading strategies\nand bundle them with your backtest results. "),(0,a.kt)("p",null,"By default the REST API and UI are disabled. You can enable them by running the init command with the ",(0,a.kt)("inlineCode",{parentName:"p"},"--web")," flag:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"investing-algorithm-framework init --web\n")),(0,a.kt)("p",null,"or you can enable them later by adding the following lines to your ",(0,a.kt)("inlineCode",{parentName:"p"},"app.py")," file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'import logging.config\nfrom dotenv import load_dotenv\n\nfrom investing_algorithm_framework import create_app, DEFAULT_LOGGING_CONFIG\n\nload_dotenv()\nlogging.config.dictConfig(DEFAULT_LOGGING_CONFIG)\n\napp = create_app(\n    web=True,  # Enable the REST API and UI\n)\n\n# Register your trading strategies here\n...\n\n# Register your market data sources here\n...\n\n# Register your portfolio configurations here\n...\n\n# Run the app\nif __name__ == "__main__":\n    app.run()\n')))}d.isMDXComponent=!0}}]);